{:paths ["src"]
 :deps {org.clojure/clojure {:mvn/version "1.10.3"}
        org.clojure/java.data {:mvn/version "1.0.86"}

        camel-snake-kebab/camel-snake-kebab {:mvn/version "0.4.2"}}
 :aliases
 {;; for help: clojure -A:deps -T:build help/doc
  :build {:deps {io.github.clojure/tools.build {:git/tag "v0.1.8" :git/sha "38d2780"}}
          :ns-default build}

  ;; running tests/checks of various kinds:
  :test {:extra-paths ["test"]
         :extra-deps {org.clojure/test.check {:mvn/version "1.1.0"}
                      io.github.cognitect-labs/test-runner
                      {:git/tag "v0.4.0" :git/sha "334f2e2"}
                      ;; connection pooling
                      com.zaxxer/HikariCP {:mvn/version "3.4.2"}
                      com.mchange/c3p0 {:mvn/version "0.9.5.5"}
                      ;; JDBC drivers
                      ;; compatible with JDK8+:
                      org.apache.derby/derby {:mvn/version "10.14.2.0"}
                      ;; compatible only with JDK9+:
                      ;; org.apache.derby/derby {:mvn/version "10.15.2.0"}
                      ;; org.apache.derby/derbyshared {:mvn/version "10.15.2.0"}
                      org.hsqldb/hsqldb {:mvn/version "2.5.0"}
                      com.h2database/h2 {:mvn/version "1.4.200"}
                      net.sourceforge.jtds/jtds {:mvn/version "1.3.1"}
                      org.mariadb.jdbc/mariadb-java-client {:mvn/version "2.5.4"}
                      mysql/mysql-connector-java {:mvn/version "8.0.19"}
                      org.postgresql/postgresql {:mvn/version "42.2.10"}
                      io.zonky.test/embedded-postgres {:mvn/version "1.2.10"}
                      io.zonky.test.postgres/embedded-postgres-binaries-darwin-amd64 {:mvn/version "13.1.0-1"}
                      io.zonky.test.postgres/embedded-postgres-binaries-linux-amd64 {:mvn/version "13.1.0-1"}
                      io.zonky.test.postgres/embedded-postgres-binaries-windows-amd64 {:mvn/version "13.1.0-1"}
                      org.xerial/sqlite-jdbc {:mvn/version "3.30.1"}
                      com.microsoft.sqlserver/mssql-jdbc {:mvn/version "8.2.1.jre8"}
                      ;; supplementary test stuff
                      ;; use log4j 2.x:
                      org.apache.logging.log4j/log4j-api {:mvn/version "2.14.1"}
                      ;; bridge into log4j:
                      org.apache.logging.log4j/log4j-1.2-api {:mvn/version "2.14.1"}
                      org.apache.logging.log4j/log4j-jcl {:mvn/version "2.14.1"}
                      org.apache.logging.log4j/log4j-jul {:mvn/version "2.14.1"}
                      org.apache.logging.log4j/log4j-slf4j-impl {:mvn/version "2.14.1"}}
         :jvm-opts ["-Dlog4j2.configurationFile=log4j2-info.properties"]
         ;; so we can run both ways:
         :exec-fn cognitect.test-runner.api/test
         :main-opts ["-m" "cognitect.test-runner"]}

  ;; first run: clojure -T:build ci
  ;; then: clojure -T:deploy target/n<TAB>
  :deploy
  {:deps {slipset/deps-deploy {:git/url "https://github.com/slipset/deps-deploy"
                               :sha "b4359c5d67ca002d9ed0c4b41b710d7e5a82e3bf"}}
   :exec-fn deps-deploy.deps-deploy/deploy
   :exec-args {:installer :remote
               :pom-file "target/classes/META-INF/maven/com.github.seancorfield/next.jdbc/pom.xml"}}}}
